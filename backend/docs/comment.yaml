openapi: 3.0.3
info:
  title: Comment API
  version: 1.0.0
  description: API for managing comments with nested replies
servers:
  - url: http://localhost:3030
    description: Local development server

paths:
  /posts/{postId}/comments:
    get:
      tags:
        - Comments
      summary: Get all comments for a post
      description: Returns a nested tree of comments for the specified post.
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the post
      responses:
        "200":
          description: List of comments with nested replies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "500":
          description: Server error
    post:
      tags:
        - Comments
      summary: Create a new comment on a post
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCommentInput"
      responses:
        "201":
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "500":
          description: Server error

  /comments/{id}:
    delete:
      tags:
        - Comments
      summary: Delete a comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Comment ID
      responses:
        "200":
          description: Comment deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: object deleted
                  id:
                    type: string
                    example: 64f12a9a9d32a7f1c0b9e001
        "404":
          description: Comment not found
        "500":
          description: Server error

    patch:
      tags:
        - Comments
      summary: Update a comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Comment ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCommentInput"
      responses:
        "200":
          description: Comment updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "404":
          description: Comment not found
        "500":
          description: Server error

components:
  schemas:
    Comment:
      type: object
      properties:
        _id:
          type: string
          example: 64f12a9a9d32a7f1c0b9e001
        post_id:
          type: string
          example: 64f12a9a9d32a7f1c0b9e999
        author_id:
          type: string
          example: 64f12a9a9d32a7f1c0b9e888
        content:
          type: string
          example: This is an example comment
        parent_comment_id:
          type: string
          nullable: true
          example: null
        image_url:
          type: string
          example: https://example.com/comment.png
        replies:
          type: array
          items:
            $ref: "#/components/schemas/Comment"

    CreateCommentInput:
      type: object
      required:
        - author_id
        - content
      properties:
        author_id:
          type: string
          example: 64f12a9a9d32a7f1c0b9e888
        content:
          type: string
          example: This is a new comment
        parent_comment_id:
          type: string
          nullable: true
          example: null
        image_url:
          type: string
          example: https://example.com/comment.png

    UpdateCommentInput:
      type: object
      properties:
        content:
          type: string
          example: Updated comment text
        image_url:
          type: string
          example: https://example.com/updated.png
