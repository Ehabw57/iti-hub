openapi: 3.0.3
info:
  title: Conversation API
  version: 1.0.0
  description: API for managing conversations between users
servers:
  - url: http://localhost:3030
    description: Local development server

paths:
  /api/conversations:
    get:
      tags:
        - Conversations
      summary: Get all conversations for authenticated user
      description: Fetch all conversations that belong to the authenticated user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ID of the authenticated user
                  example: "6510d1a2b3c4d5e6f7890123"
              required:
                - user_id
      responses:
        "200":
          description: Conversations retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "6510d1a2b3c4d5e6f7890123"
                        participants:
                          type: array
                          items:
                            type: string
                          example: ["user123", "user456"]
                        lastMessage:
                          type: string
                          example: "Hey there!"
                        lastMessageTime:
                          type: string
                          format: date-time
                        lastMessageSender:
                          type: string
        "401":
          description: User not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "User not authenticated"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Error fetching conversations"

    post:
      tags:
        - Conversations
      summary: Create a new conversation
      description: Create a new conversation between users. Checks if participants are connected and prevents duplicates.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ID of the authenticated user
                  example: "6510d1a2b3c4d5e6f7890123"
                participants:
                  type: array
                  items:
                    type: string
                  description: Array of participant user IDs
                  example: ["6510d1a2b3c4d5e6f7890456"]
              required:
                - user_id
                - participants
      responses:
        "201":
          description: Conversation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Conversation created successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "6510d1a2b3c4d5e6f7890123"
                      participants:
                        type: array
                        items:
                          type: string
                        example: ["user123", "user456"]
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-10-03T12:00:00Z"
        "200":
          description: Conversation already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Conversation already exists"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "6510d1a2b3c4d5e6f7890123"
                      participants:
                        type: array
                        items:
                          type: string
                        example: ["user123", "user456"]
                      createdAt:
                        type: string
                        format: date-time
        "400":
          description: Bad request - validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    examples:
                      missing_participants:
                        value: "Participants are required"
                      invalid_participants:
                        value: "One or more participants do not exist"
                      wrong_count:
                        value: "A conversation must have exactly 2 participants"
        "403":
          description: Forbidden - participants not connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Participants are not connected or blocked"

  /api/conversations/{id}:
    get:
      tags:
        - Conversations
      summary: Get conversation by ID
      description: Fetch a conversation by ID with first 10 messages. User must be a participant.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Conversation ID
          example: "6510d1a2b3c4d5e6f7890123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ID of the authenticated user
                  example: "6510d1a2b3c4d5e6f7890123"
              required:
                - user_id
      responses:
        "200":
          description: Conversation retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "6510d1a2b3c4d5e6f7890123"
                      participants:
                        type: array
                        items:
                          type: string
                        example: ["user123", "user456"]
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            content:
                              type: string
                            sender_id:
                              type: object
                            createdAt:
                              type: string
                              format: date-time
        "400":
          description: Invalid conversation ID format
        "401":
          description: User not authenticated
        "403":
          description: User not authorized to view this conversation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "You are not authorized to view this conversation"
        "404":
          description: Conversation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Conversation not found"

    delete:
      tags:
        - Conversations
      summary: Delete a conversation
      description: Delete a conversation and all its messages. User must be a participant.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Conversation ID
          example: "6510d1a2b3c4d5e6f7890123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ID of the authenticated user
                  example: "6510d1a2b3c4d5e6f7890123"
              required:
                - user_id
      responses:
        "200":
          description: Conversation deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Conversation deleted successfully"
        "400":
          description: Invalid conversation ID format
        "401":
          description: User not authenticated
        "403":
          description: User not authorized to delete this conversation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "You are not authorized to delete this conversation"
        "404":
          description: Conversation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Conversation not found"

components:
  schemas:
    Conversation:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the conversation
        participants:
          type: array
          items:
            type: string
          description: Array of user IDs participating in the conversation
        last_message:
          type: string
          description: Reference to the last message in the conversation
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the conversation was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the conversation was last updated
