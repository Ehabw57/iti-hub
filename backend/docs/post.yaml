openapi: 3.0.3
info:
  title: Post API
  version: 1.0.0
  description: API for managing posts with media attachments
servers:
  - url: http://localhost:3030
    description: Local development server

paths:
  /posts:
    get:
      tags:
        - Posts
      summary: Get all posts
      description: Returns a list of all posts with pagination
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of posts per page
      responses:
        "200":
          description: List of posts retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
        "500":
          description: Server error

    post:
      tags:
        - Posts
      summary: Create a new post
      description: Creates a new post with optional media attachments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePostInput"
      responses:
        "201":
          description: Post created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "400":
          description: Invalid input data
        "500":
          description: Server error

  /posts/{id}:
    get:
      tags:
        - Posts
      summary: Get a post by ID
      description: Returns a single post with all its details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the post
      responses:
        "200":
          description: Post retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "404":
          description: Post not found
        "500":
          description: Server error

    put:
      tags:
        - Posts
      summary: Update a post
      description: Updates an existing post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Post ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePostInput"
      responses:
        "200":
          description: Post updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "404":
          description: Post not found
        "500":
          description: Server error

    delete:
      tags:
        - Posts
      summary: Delete a post
      description: Deletes a post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Post ID
      responses:
        "200":
          description: Post deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post deleted successfully
                  id:
                    type: string
                    example: 64f12a9a9d32a7f1c0b9e001
        "404":
          description: Post not found
        "500":
          description: Server error

components:
  schemas:
    Post:
      type: object
      properties:
        _id:
          type: string
          example: 64f12a9a9d32a7f1c0b9e001
        author_id:
          type: string
          example: 64f12a9a9d32a7f1c0b9e888
        track_id:
          type: string
          nullable: true
          example: 64f12a9a9d32a7f1c0b9e777
        branch_id:
          type: string
          nullable: true
          example: 64f12a9a9d32a7f1c0b9e666
        content:
          type: string
          example: This is an example post content
        media:
          type: array
          items:
            $ref: "#/components/schemas/Media"
        createdAt:
          type: string
          format: date-time
          example: 2023-09-15T10:30:00.000Z
        updatedAt:
          type: string
          format: date-time
          example: 2023-09-15T10:30:00.000Z

    Media:
      type: object
      required:
        - url
        - type
      properties:
        _id:
          type: string
          example: 64f12a9a9d32a7f1c0b9e002
        url:
          type: string
          format: uri
          example: https://example.com/media/image.jpg
        type:
          type: string
          enum: [photo, video, file]
          example: photo
          default: file

    CreatePostInput:
      type: object
      required:
        - author_id
        - content
      properties:
        author_id:
          type: string
          example: 64f12a9a9d32a7f1c0b9e888
        track_id:
          type: string
          nullable: true
          example: 64f12a9a9d32a7f1c0b9e777
        branch_id:
          type: string
          nullable: true
          example: 64f12a9a9d32a7f1c0b9e666
        content:
          type: string
          example: This is a new post content
        media:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                example: https://example.com/media/image.jpg
              type:
                type: string
                enum: [photo, video, file]
                example: photo
            required:
              - url
              - type

    UpdatePostInput:
      type: object
      properties:
        content:
          type: string
          example: Updated post content
        track_id:
          type: string
          nullable: true
          example: 64f12a9a9d32a7f1c0b9e777
        branch_id:
          type: string
          nullable: true
          example: 64f12a9a9d32a7f1c0b9e666
        media:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                example: https://example.com/media/updated-image.jpg
              type:
                type: string
                enum: [photo, video, file]
                example: photo
            required:
              - url
              - type