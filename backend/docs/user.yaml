openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API for managing users

servers:
  - url: http://localhost:3030
    description: Local server

paths:
  /User:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of all users
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Error creating user

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single user
        '404':
          description: User not found

    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found

    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        first_name:
          type: string
          example: Ayat
        last_name:
          type: string
          example: Elkady
        email:
          type: string
          format: email
          example: ayat@test.com
        password:
          type: string
          format: password
          example: 12345678
        role:
          type: string
          enum: [user, student, instructor, admin, super_admin]
          example: student
        profile_pic:
          type: string
          example: https://example.com/avatar.png
